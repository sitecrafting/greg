name: greg
recipe: wordpress
config:
  webroot: wp
  php: '8.3'
  composer_version: 1

services:
  node:
    type: node:14

  appserver:
    run_as_root:
      - apt-get update
      - apt-get install subversion -y

    run:
      - composer install
      - ./bin/setup-wordpress.sh
      - ./bin/install-wp-tests.sh

  database:
    type: mysql:5.7

  testdb:
    type: mysql:5.7
    portforward: true
    creds:
      user: test
      password: test
      database: test

tooling:
  clean:
    service: appserver
    cmd: 'rm -rf node_modules vendor *.tar.gz *.zip wp test/wp test/wp-tests-lib'

  install:
    service: appserver
    cmd: './bin/setup-wordpress.sh'
    description: 'Install and configure WordPress for custom plugin dev'

  debug:
    service: appserver
    cmd: 'touch wp/wp-content/debug.log && tail -f ./wp/wp-content/debug.log'
    description: 'Get real-time WP debug log output'

  unit:
    service: appserver
    cmd: './vendor/bin/phpunit --group unit'
    description: 'Run unit tests'

  integration:
    service: appserver
    cmd: './vendor/bin/phpunit --group integration'
    description: 'Run integration tests'

  test:
    service: appserver
    cmd: './vendor/bin/phpunit'
    description: 'Run all unit and integration tests'

  install-tests:
    service: appserver
    cmd: './bin/install-wp-tests.sh'
    description: 'Install the WP Unit Test suite'

  sniff-summary:
    service: appserver
    cmd: './vendor/bin/phpcs --report=summary --standard=./phpcs.xml test/unit test/integration src'
    description: 'Summarize PHPCS code sniffer findings'

  sniff:
    service: appserver
    cmd: './vendor/bin/phpcs --standard=./phpcs.xml test/unit test/integration src'
    description: 'Run PHPCS code sniffer on all test and production code'

  sniff-fix:
    service: appserver
    cmd: './vendor/bin/phpcbf --standard=./phpcs.xml test/unit test/integration src'
    description: 'Fix all automatically fixable issues found by PHPCS'

  analyze:
    service: appserver
    cmd: './vendor/bin/phpstan analyse'
    description: 'Run phpstan coding standards (highest level)'

  analyse:
    service: appserver
    cmd: './vendor/bin/phpstan analyse'
    description: 'Run phpstan coding standards (highest level)'

  phpstan:
    service: appserver
    cmd: './vendor/bin/phpstan'
    description: 'Run phpstan commands for static analysis'

  ci:
    service: appserver
    cmd:
      - './vendor/bin/phpunit'
      - './vendor/bin/phpstan analyse'
      - './vendor/bin/phpcs --standard=./phpcs.xml test/unit test/integration src'
    description: 'Run all continuous integration (CI) checks'

proxy:
  appserver:
    - greg.lndo.site
